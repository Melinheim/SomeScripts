stages:
  - conflict_check
  - config_update
  - project_update

include: '/ci_include/project_update_jobs.yml'

default:
  before_script:
    - git config --global user.email "user@domain.com""
    - git config --global user.name "GitLab Runner"
    - git config user.email "user@domain.com""
    - git config user.name "GitLab Runner"

merge_conflict_checker:
  stage: conflict_check
  tags:
    - work
  script:
    - all_conflics=$(grep --exclude-dir=.git --exclude=\*.git* -rnw './' -e '<<<<<<< HEAD') || true
    - echo $all_conflics
    - output=$(echo $all_conflics | wc -l)
    - empty_var=$( [ -z "$all_conflics" ] && echo 1 || echo 0)
    - if [ $output -ne 0 -a $empty_var -ne 1 ]; then echo "solve merge conflicts please"; false; fi;
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"

job_generator:
  stage: config_update
  tags:
    - work
  script:
    - pip install PyYAML
    - git checkout ${CI_COMMIT_REF_NAME}
    - git pull
    - python3 ./script/job_creator.py
    - git add ci_include/
    - git commit -m "Update jobs for projects update" || true
    - git push git@<gitlab.address>:<path/to/project> HEAD:${CI_COMMIT_REF_NAME}
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - mirror_config.yaml
